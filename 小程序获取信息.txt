Page({
info: function (res) {
    // console.log(res)
    wx.checkSession({	//查看
      success() {
        //session_key 未过期，并且在本生命周期一直有效
        wx.getUserInfo({
          success: function (res) {
            // console.log(res)
            wx.request({
              url: app.globalData.Url + "/getinfo/",
              data: { "encryptedData": res.encryptedData, "iv": res.iv, "login_key": wx.getStorageSync("login_key") },
              method: "POST",
              header: { "content-type": "application/json" },
              success: function (res) {
                console.log(res)
              }
            })
          }
        })

})

获取手机号
<button open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber"></button>

Page({
  getPhoneNumber (e) {
    console.log(e.detail.errMsg)
    console.log(e.detail.iv)
    console.log(e.detail.encryptedData)
  }
})

这时用户微信非第一次授权，相当于一个登录的过程。                
此次授权是是登录还是注册，我通过一个建立一个标识位给前端判断，前端如果通过这个标识位判断这次是注册，就继续通过wx.getUserInfo()方法拉取
用户头像昵称等信息，然后通过修改用户信息的接口传到后端进行一个修改的操作。建议不要每次获取code之后就调用getUserInfo方法拉取信息然后一
次性把code和用户信息传到后端，一来是用户如果进行的登录操作，微信个人信息时没有用的，增加了获取数据时间和传输时间。二是我们如果每次获
取到用户信息就给他设置个人信息，这样就会覆盖用户之前的操作（比如用户之前已经修改一次头像，这时微信头像和小程序内部头像是不同的，然后用
户重新登录了一下，两者的头像又一样了，这样是错误的），如果不想得到这样的结果就得再进行一次判断，增加了代码耦合度。所以登录注册应该只传
code，用户的信息设置应该用另外一个接口。
